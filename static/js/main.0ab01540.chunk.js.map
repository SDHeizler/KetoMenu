{"version":3,"sources":["logo.svg","GlobalState/GlobalStateProvider.js","Components/About.js","Components/Meals.js","Components/Home.js","Components/Breakfast.js","Components/Lunch.js","Components/Dinner.js","Components/Snacks.js","App.js","reportWebVitals.js","index.js"],"names":["globalstate","React","createContext","GlobalStateProvider","state","Meals","About","MealsStyleInActive","textDecoration","fontSize","fontWeight","color","transition","transitionDuration","MealsStyleActive","borderBottom","AboutStyleInActive","AboutStyleActive","mealsOnClick","setTimeout","setState","MealsHoverBool","aboutOnClick","onMealClick","Provider","value","this","props","children","Component","className","style","role","context","onClick","to","href","target","contextType","Home","Breakfast","marginBottom","Lunch","roel","Dinner","Snacks","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ab01540.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nexport const globalstate = React.createContext();\r\nclass GlobalStateProvider extends React.Component {\r\n  state = {\r\n    Meals: false,\r\n    About: true,\r\n    MealsStyleInActive: {\r\n      textDecoration: \"none\",\r\n      fontSize: \"30px\",\r\n      fontWeight: \"bold\",\r\n      color: \"black\",\r\n      transition: \"ease-in-out\",\r\n      transitionDuration: \"0.2s\",\r\n    },\r\n    MealsStyleActive: {\r\n      textDecoration: \"none\",\r\n      fontSize: \"30px\",\r\n      fontWeight: \"bold\",\r\n      color: \"#FF3030\",\r\n      borderBottom: \"3px solid #FF3030\",\r\n      transition: \"ease-in-out\",\r\n      transitionDuration: \"0.2s\",\r\n    },\r\n    AboutStyleInActive: {\r\n      textDecoration: \"none\",\r\n      fontSize: \"30px\",\r\n      fontWeight: \"bold\",\r\n      color: \"black\",\r\n      transition: \"ease-in-out\",\r\n      transitionDuration: \"0.2s\",\r\n    },\r\n    AboutStyleActive: {\r\n      textDecoration: \"none\",\r\n      fontSize: \"30px\",\r\n      fontWeight: \"bold\",\r\n      color: \"#FF3030\",\r\n      borderBottom: \"3px solid #FF3030\",\r\n      transition: \"ease-in-out\",\r\n      transitionDuration: \"0.2s\",\r\n    },\r\n  };\r\n  mealsOnClick = () => {\r\n    if (this.state.Meals) {\r\n      return;\r\n    } else {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          ...this.state,\r\n          Meals: true,\r\n          About: false,\r\n          MealsHoverBool: true,\r\n        });\r\n      }, 100);\r\n    }\r\n  };\r\n  aboutOnClick = () => {\r\n    if (this.state.About) {\r\n      return;\r\n    } else {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          ...this.state,\r\n          Meals: false,\r\n          About: true,\r\n          MealsHoverBool: false,\r\n        });\r\n      }, 100);\r\n    }\r\n  };\r\n  onMealClick = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      Meals: false,\r\n      About: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <globalstate.Provider\r\n        value={{\r\n          ...this.state,\r\n          mealsOnClick: this.mealsOnClick,\r\n          aboutOnClick: this.aboutOnClick,\r\n          onMealClick: this.onMealClick,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </globalstate.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalStateProvider;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { globalstate, globalState } from \"../GlobalState/GlobalStateProvider\";\r\nimport Proptypes from \"prop-types\";\r\nclass About extends React.Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <main>\r\n        <header className=\"HomeScreenNav\">\r\n          <h1>\r\n            Keto <span style={{ color: \"black\" }}>Meals</span>\r\n          </h1>\r\n          <nav role=\"navigation menu\" className=\"NavLinkContainer\">\r\n            <Link\r\n              role=\"link to meals page\"\r\n              style={\r\n                this.context.Meals\r\n                  ? this.context.MealsStyleActive\r\n                  : this.context.MealsStyleInActive\r\n              }\r\n              onClick={() => this.context.mealsOnClick()}\r\n              to=\"/Meals\"\r\n            >\r\n              Meals\r\n            </Link>\r\n            <Link\r\n              role=\"link to about page\"\r\n              style={\r\n                this.context.About\r\n                  ? this.context.AboutStyleActive\r\n                  : this.context.AboutStyleInActive\r\n              }\r\n              onClick={() => this.context.aboutOnClick()}\r\n              to=\"/\"\r\n            >\r\n              About Keto\r\n            </Link>\r\n            <a\r\n              role=\"link to github\"\r\n              href=\"https://github.com/SDHeizler?tab=repositories\"\r\n              target=\"_blank\"\r\n            >\r\n              GitHub\r\n            </a>\r\n          </nav>\r\n        </header>\r\n        <div role=\"image\" className=\"HomeScreenParaImage\"></div>\r\n        <h1 role=\"title\" className=\"KetoTitle\">\r\n          What is the Keto Diet?\r\n        </h1>\r\n        <p role=\"keto description\" className=\"KetoAbout\">\r\n          The ketogenic diet is a high-fat, adequate-protein, low-carbohydrate\r\n          diet that in medicine is used mainly to treat hard-to-control\r\n          (refractory) epilepsy in children. The diet forces the body to burn\r\n          fats rather than carbohydrates. Normally carbohydrates in food are\r\n          converted into glucose, which is then transported around the body and\r\n          is important in fueling brain function. But if little carbohydrate\r\n          remains in the diet, the liver converts fat into fatty acids and\r\n          ketone bodies, the latter passing into the brain and replacing glucose\r\n          as an energy source. An elevated level of ketone bodies in the blood\r\n          (a state called ketosis) eventually lowers the frequency of epileptic\r\n          seizures. Around half of children and young people with epilepsy who\r\n          have tried some form of this diet saw the number of seizures drop by\r\n          at least half, and the effect persists after discontinuing the diet.\r\n          Some evidence shows that adults with epilepsy may benefit from the\r\n          diet and that a less strict regimen, such as a modified Atkins diet,\r\n          is similarly effective. Side effects may include constipation, high\r\n          cholesterol, growth slowing, acidosis, and kidney stones.\r\n        </p>\r\n        <div className=\"clrfloat\"></div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n// GlobalState\r\nAbout.contextType = globalstate;\r\n\r\n// Proptypes\r\nAbout.propTypes = {\r\n  mealsOnClick: Proptypes.func,\r\n  aboutOnClick: Proptypes.func,\r\n};\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { globalstate, globalState } from \"../GlobalState/GlobalStateProvider\";\r\nimport Proptypes from \"prop-types\";\r\nclass Meals extends React.Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <main>\r\n        <header className=\"HomeScreenNav\">\r\n          <h1 role=\"main title\">\r\n            Keto <span style={{ color: \"black\" }}>Meals</span>\r\n          </h1>\r\n          <nav role=\"navigation menu\" className=\"NavLinkContainer\">\r\n            <Link\r\n              role=\"link to meals page\"\r\n              style={\r\n                this.context.Meals\r\n                  ? this.context.MealsStyleActive\r\n                  : this.context.MealsStyleInActive\r\n              }\r\n              onClick={() => this.context.mealsOnClick()}\r\n              to=\"/Meals\"\r\n            >\r\n              Meals\r\n            </Link>\r\n            <Link\r\n              role=\"link to about page\"\r\n              style={\r\n                this.context.About\r\n                  ? this.context.AboutStyleActive\r\n                  : this.context.AboutStyleInActive\r\n              }\r\n              onClick={() => this.context.aboutOnClick()}\r\n              to=\"/\"\r\n            >\r\n              About Keto\r\n            </Link>\r\n            <a\r\n              role=\"link to github\"\r\n              href=\"https://github.com/SDHeizler?tab=repositories\"\r\n              target=\"_blank\"\r\n            >\r\n              GitHub\r\n            </a>\r\n          </nav>\r\n        </header>\r\n        <ul role=\"meal options container\" className=\"HomeScreenUl\">\r\n          <li role=\"breakfast meal option\" className=\"Breakfast\">\r\n            <div className=\"BgFilterA\"></div>\r\n            <Link\r\n              onClick={() => {\r\n                this.context.onMealClick();\r\n              }}\r\n              className=\"BreakfastA\"\r\n              to=\"/Breakfast\"\r\n            >\r\n              Breakfast\r\n            </Link>\r\n          </li>\r\n          <li role=\"lunch meal option\" className=\"Lunch\">\r\n            <div className=\"BgFilterA\"></div>\r\n            <Link\r\n              onClick={() => {\r\n                this.context.onMealClick();\r\n              }}\r\n              className=\"LunchA\"\r\n              to=\"/Lunch\"\r\n            >\r\n              Lunch\r\n            </Link>\r\n          </li>\r\n          <li role=\"dinner meal option\" className=\"Dinner\">\r\n            <div className=\"BgFilterA\"></div>\r\n            <Link\r\n              onClick={() => {\r\n                this.context.onMealClick();\r\n              }}\r\n              className=\"DinnerA\"\r\n              to=\"/Dinner\"\r\n            >\r\n              Dinner\r\n            </Link>\r\n          </li>\r\n          <li role=\"snacks meal option\" className=\"Snacks\">\r\n            <div className=\"BgFilterA\"></div>\r\n            <Link\r\n              onClick={() => {\r\n                this.context.onMealClick();\r\n              }}\r\n              className=\"SnacksA\"\r\n              to=\"/Snacks\"\r\n            >\r\n              Snacks\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n// GlobalState\r\nMeals.contextType = globalstate;\r\n\r\n// Proptypes\r\nMeals.propTypes = {\r\n  mealsOnClick: Proptypes.func,\r\n  aboutOnClick: Proptypes.func,\r\n  onMealClick: Proptypes.func,\r\n};\r\nexport default Meals;\r\n","import React from \"react\";\r\nimport { globalstate } from \"../GlobalState/GlobalStateProvider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport About from \"./About\";\r\nimport Meals from \"./Meals\";\r\nclass Home extends React.Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <main>\r\n        <header>\r\n          <nav className=\"HomeScreenNav\">\r\n            <h1>\r\n              Keto <span style={{ color: \"black\" }}>Meals</span>\r\n            </h1>\r\n            <div className=\"NavLinkContainer\">\r\n              <Link to=\"/About\">Meals</Link>\r\n              <Link to=\"/About\">About Keto</Link>\r\n              <a\r\n                href=\"https://github.com/SDHeizler?tab=repositories\"\r\n                target=\"_blank\"\r\n              >\r\n                GitHub\r\n              </a>\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      </main>\r\n    );\r\n  }\r\n}\r\nHome.contextType = globalstate;\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { globalstate } from \"../GlobalState/GlobalStateProvider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Proptypes from \"prop-types\";\r\nclass Breakfast extends React.Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <main>\r\n        <header className=\"HomeScreenNav\">\r\n          <h1 role=\"main title\">\r\n            Keto <span style={{ color: \"black\" }}>Meals</span>\r\n          </h1>\r\n          <nav role=\"navigation menu\" className=\"NavLinkContainer\">\r\n            <Link\r\n              role=\"link to meals page\"\r\n              style={\r\n                this.context.Meals\r\n                  ? this.context.MealsStyleActive\r\n                  : this.context.MealsStyleInActive\r\n              }\r\n              onClick={() => this.context.mealsOnClick()}\r\n              to=\"/Meals\"\r\n            >\r\n              Meals\r\n            </Link>\r\n            <Link\r\n              role=\"link to about page\"\r\n              style={\r\n                this.context.About\r\n                  ? this.context.AboutStyleActive\r\n                  : this.context.AboutStyleInActive\r\n              }\r\n              onClick={() => this.context.aboutOnClick()}\r\n              to=\"/\"\r\n            >\r\n              About Keto\r\n            </Link>\r\n            <a\r\n              role=\"link to github\"\r\n              href=\"https://github.com/SDHeizler?tab=repositories\"\r\n              target=\"_blank\"\r\n            >\r\n              GitHub\r\n            </a>\r\n          </nav>\r\n        </header>\r\n        <div role=\"image\" className=\"BreakfastPageParaImage\"></div>\r\n        <h1 role=\"breakfast title\" className=\"BreakfastPageMainTitle\">\r\n          What's a good breakfast option on keto?\r\n        </h1>\r\n        <h2 role=\"breakfast meal title\" className=\"BreakfastPageTitle\">\r\n          Classic bacon and eggs!\r\n        </h2>\r\n        <p\r\n          role=\"meal description\"\r\n          style={{ marginBottom: \"5vh\" }}\r\n          className=\"KetoAbout\"\r\n        >\r\n          One of the all-time best keto breakfasts ever! Step up your keto bacon\r\n          and eggs game with this classic recipe. Gauge your hunger meter and\r\n          enjoy as many eggs as you need to feel satisfied. We’re drooling just\r\n          thinking about this plate of keto deliciousness!\r\n        </p>\r\n        <a\r\n          role=\"link to meal\"\r\n          className=\"BreakfastRecipe\"\r\n          target=\"_blank\"\r\n          href=\"https://www.dietdoctor.com/recipes/classic-bacon-and-eggs\"\r\n        >\r\n          Click here for recipe\r\n        </a>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n// GlobalState\r\nBreakfast.contextType = globalstate;\r\n\r\n// Proptypes\r\nBreakfast.propTypes = {\r\n  mealsOnClick: Proptypes.func,\r\n  aboutOnClick: Proptypes.func,\r\n};\r\nexport default Breakfast;\r\n","import React from \"react\";\r\nimport { globalstate } from \"../GlobalState/GlobalStateProvider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Proptypes from \"prop-types\";\r\nclass Lunch extends React.Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <main>\r\n        <header className=\"HomeScreenNav\">\r\n          <h1 roel=\"main title\">\r\n            Keto <span style={{ color: \"black\" }}>Meals</span>\r\n          </h1>\r\n          <nav role=\"navigation menu\" className=\"NavLinkContainer\">\r\n            <Link\r\n              role=\"link to meals page\"\r\n              style={\r\n                this.context.Meals\r\n                  ? this.context.MealsStyleActive\r\n                  : this.context.MealsStyleInActive\r\n              }\r\n              onClick={() => this.context.mealsOnClick()}\r\n              to=\"/Meals\"\r\n            >\r\n              Meals\r\n            </Link>\r\n            <Link\r\n              role=\"link to about page\"\r\n              style={\r\n                this.context.About\r\n                  ? this.context.AboutStyleActive\r\n                  : this.context.AboutStyleInActive\r\n              }\r\n              onClick={() => this.context.aboutOnClick()}\r\n              to=\"/\"\r\n            >\r\n              About Keto\r\n            </Link>\r\n            <a\r\n              role=\"link to github\"\r\n              href=\"https://github.com/SDHeizler?tab=repositories\"\r\n              target=\"_blank\"\r\n            >\r\n              GitHub\r\n            </a>\r\n          </nav>\r\n        </header>\r\n        <div role=\"image\" className=\"LunchPageParaImage\"></div>\r\n        <h1 role=\"lunch title\" className=\"LunchPageMainTitle\">\r\n          What's a good lunch option on keto?\r\n        </h1>\r\n        <h2 role=\"lunch meal title\" className=\"LunchPageTitle\">\r\n          Keto French quiche!\r\n        </h2>\r\n        <p\r\n          role=\"meal description\"\r\n          style={{ marginBottom: \"5vh\" }}\r\n          className=\"KetoAbout\"\r\n        >\r\n          The most classic of all savory pies! An authentic quiche is of French\r\n          descent with a few, well-chosen ingredients making up the filling –\r\n          cheese, eggs – and of course, bacon!\r\n        </p>\r\n        <a\r\n          role=\"link to meal\"\r\n          className=\"LunchRecipe\"\r\n          target=\"_blank\"\r\n          href=\"https://www.dietdoctor.com/recipes/keto-french-quiche\"\r\n        >\r\n          Click here for recipe\r\n        </a>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n// GlobalState\r\nLunch.contextType = globalstate;\r\n\r\n// Proptypes\r\nLunch.propTypes = {\r\n  mealsOnClick: Proptypes.func,\r\n  aboutOnClick: Proptypes.func,\r\n};\r\nexport default Lunch;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { globalstate } from \"../GlobalState/GlobalStateProvider\";\r\nimport Proptypes from \"prop-types\";\r\nclass Dinner extends React.Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <main>\r\n        <header className=\"HomeScreenNav\">\r\n          <h1 role=\"main title\">\r\n            Keto <span style={{ color: \"black\" }}>Meals</span>\r\n          </h1>\r\n          <nav role=\"navigation menu\" className=\"NavLinkContainer\">\r\n            <Link\r\n              role=\"link to meals page\"\r\n              style={\r\n                this.context.Meals\r\n                  ? this.context.MealsStyleActive\r\n                  : this.context.MealsStyleInActive\r\n              }\r\n              onClick={() => this.context.mealsOnClick()}\r\n              to=\"/Meals\"\r\n            >\r\n              Meals\r\n            </Link>\r\n            <Link\r\n              role=\"link to about page\"\r\n              style={\r\n                this.context.About\r\n                  ? this.context.AboutStyleActive\r\n                  : this.context.AboutStyleInActive\r\n              }\r\n              onClick={() => this.context.aboutOnClick()}\r\n              to=\"/\"\r\n            >\r\n              About Keto\r\n            </Link>\r\n            <a\r\n              role=\"link to github\"\r\n              href=\"https://github.com/SDHeizler?tab=repositories\"\r\n              target=\"_blank\"\r\n            >\r\n              GitHub\r\n            </a>\r\n          </nav>\r\n        </header>\r\n        <div role=\"image\" className=\"DinnerPageParaImage\"></div>\r\n        <h1 role=\"dinner title\" className=\"DinnerPageMainTitle\">\r\n          What's a good dinner option on keto?\r\n        </h1>\r\n        <h2 role=\"dinner meal title\" className=\"DinnerPageTitle\">\r\n          Ginger lime chicken!\r\n        </h2>\r\n        <p\r\n          role=\"meal description\"\r\n          style={{ marginBottom: \"5vh\" }}\r\n          className=\"KetoAbout\"\r\n        >\r\n          This quick and easy low-carb Asian inspired chicken recipe is not only\r\n          incredibly flavorful, but it is also very versatile. You can double\r\n          the recipe and have it for dinner one night, and then use the leftover\r\n          chicken for salads throughout the week.\r\n        </p>\r\n        <a\r\n          role=\"link to meal\"\r\n          className=\"DinnerRecipe\"\r\n          target=\"_blank\"\r\n          href=\"https://www.dietdoctor.com/recipes/ginger-lime-chicken\"\r\n        >\r\n          Click here for recipe\r\n        </a>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n// GlobalState\r\nDinner.contextType = globalstate;\r\n\r\n// Proptypes\r\nDinner.propTypes = {\r\n  mealsOnClick: Proptypes.func,\r\n  aboutOnClick: Proptypes.func,\r\n};\r\nexport default Dinner;\r\n","import React from \"react\";\r\nimport { globalstate } from \"../GlobalState/GlobalStateProvider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Proptypes from \"prop-types\";\r\nclass Snacks extends React.Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <main>\r\n        <header className=\"HomeScreenNav\">\r\n          <h1 role=\"main title\">\r\n            Keto <span style={{ color: \"black\" }}>Meals</span>\r\n          </h1>\r\n          <nav role=\"navigation menu\" className=\"NavLinkContainer\">\r\n            <Link\r\n              role=\"link to meals page\"\r\n              style={\r\n                this.context.Meals\r\n                  ? this.context.MealsStyleActive\r\n                  : this.context.MealsStyleInActive\r\n              }\r\n              onClick={() => this.context.mealsOnClick()}\r\n              to=\"/Meals\"\r\n            >\r\n              Meals\r\n            </Link>\r\n            <Link\r\n              role=\"link to about page\"\r\n              style={\r\n                this.context.About\r\n                  ? this.context.AboutStyleActive\r\n                  : this.context.AboutStyleInActive\r\n              }\r\n              onClick={() => this.context.aboutOnClick()}\r\n              to=\"/\"\r\n            >\r\n              About Keto\r\n            </Link>\r\n            <a\r\n              role=\"link to github\"\r\n              href=\"https://github.com/SDHeizler?tab=repositories\"\r\n              target=\"_blank\"\r\n            >\r\n              GitHub\r\n            </a>\r\n          </nav>\r\n        </header>\r\n        <div role=\"image\" className=\"SnacksPageParaImage\"></div>\r\n        <h1 role=\"snacks title\" className=\"SnacksPageMainTitle\">\r\n          What's a good snack option on keto?\r\n        </h1>\r\n        <h2 role=\"snacks meal title\" className=\"SnacksPageTitle\">\r\n          Keto salami and cheese chips!\r\n        </h2>\r\n        <p\r\n          role=\"meal description\"\r\n          style={{ marginBottom: \"5vh\" }}\r\n          className=\"KetoAbout\"\r\n        >\r\n          Craving a crunchy, low-carb snack? We’ve got one that only takes a few\r\n          minutes to prepare. Salami & cheese is quite possibly the best\r\n          combination EVER! Pop this goodness in the oven and before you know\r\n          it, you’ll be crunching away!\r\n        </p>\r\n        <a\r\n          role=\"link to meal\"\r\n          className=\"SnacksRecipe\"\r\n          target=\"_blank\"\r\n          href=\"https://www.dietdoctor.com/recipes/salami-cheese-chips\"\r\n        >\r\n          Click here for recipe\r\n        </a>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n// GlobalState\r\nSnacks.contextType = globalstate;\r\n\r\n// Proptypes\r\nSnacks.propTypes = {\r\n  mealsOnClick: Proptypes.func,\r\n  aboutOnClick: Proptypes.func,\r\n};\r\nexport default Snacks;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport GlobalStateProvider from \"./GlobalState/GlobalStateProvider\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport Meals from \"./Components/Meals\";\nimport About from \"./Components/About\";\nimport Breakfast from \"./Components/Breakfast\";\nimport Lunch from \"./Components/Lunch\";\nimport Dinner from \"./Components/Dinner\";\nimport Snacks from \"./Components/Snacks\";\nclass App extends React.Component {\n  render() {\n    return (\n      <GlobalStateProvider>\n        <Switch>\n          <Route exact path=\"/KetoMenu\">\n            <About></About>\n          </Route>\n          <Route path=\"/Meals\">\n            <Meals></Meals>\n          </Route>\n          <Route path=\"/Breakfast\">\n            <Breakfast></Breakfast>\n          </Route>\n          <Route path=\"/Lunch\">\n            <Lunch></Lunch>\n          </Route>\n          <Route path=\"/Dinner\">\n            <Dinner></Dinner>\n          </Route>\n          <Route path=\"/Snacks\">\n            <Snacks></Snacks>\n          </Route>\n        </Switch>\n      </GlobalStateProvider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}